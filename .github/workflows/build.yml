name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: ${{ github.workspace }}

      - name: Run build.py to generate executable
        run: python build.py
        working-directory: ${{ github.workspace }}

      - name: Upload executable to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: patcher-executable
          path: dist/patcher.exe

  release:
    needs: build
    runs-on: windows-latest
    env:
      RELEASE_TAG: "v${{ github.run_number }}"
      RELEASE_NAME: "Release ${{ github.run_number }}"

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: patcher-executable
          path: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/patcher.exe
          asset_name: patcher.exe
          asset_content_type: application/octet-stream
